package org.voltdb.policysandbox;

import org.voltdb.types.TimestampType;

/* This file is part of VoltDB.
 * Copyright (C) 2008-2021 VoltDB Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * A class representing a message generated by network devices in our mediation
 * demo
 *
 */
public class PolicyUsageMessage {
    
    /**
     * The user this session is for. A user can have multiple sessions.
     */
    private long userId;
  
    /**
     * A session is identified by sessionId + sessionStartUTC
     */
    private long sessionId;
    
    /**
     * A session is identified by sessionId + sessionStartUTC
     */
    private TimestampType sessionStartUTC;
    
    /**
     * Id of 'cell' session is using
     */
    private long cellId;
    
    /**
     * The name of the policy we are using...
     */
    private String policyName;
    
    /**
     * How much usage we havew clocked up
     */
    private long recordUsage;

    /**
     * Create a PolicyUsageMessage so we can tell VoltDB about usage.
     * @param cellId
     * @param sessionId
     * @param sessionStartUTC
     * @param policyName
     * @param recordUsage
     */
    public PolicyUsageMessage(long cellId, long sessionId, TimestampType sessionStartUTC, String policyName, long recordUsage) {
        super();
        this.cellId = cellId;
        this.sessionId = sessionId;
        this.sessionStartUTC = sessionStartUTC;
        this.policyName = policyName;
        this.recordUsage = recordUsage;
    }

    @Override
    public String toString() {

        StringBuilder builder = new StringBuilder();
        builder.append(cellId);
        builder.append(",");
        builder.append(sessionId);
        builder.append(",");
        builder.append(sessionStartUTC);
        builder.append(",");
        builder.append(policyName);
        builder.append(",");
        builder.append(recordUsage);
        return builder.toString();
    }

    /**
     * @return the cellId
     */
    public long getCellId() {
        return cellId;
    }

    /**
     * @return the sessionId
     */
    public long getSessionId() {
        return sessionId;
    }

    /**
     * @return the sessionStartUTC
     */
    public TimestampType getSessionStartUTC() {
        return sessionStartUTC;
    }

    /**
     * @return the userId
     */
    public String getPolicyName() {
        return policyName;
    }

    /**
     * @return the recordUsage
     */
    public long getRecordUsage() {
        return recordUsage;
    }

    /**
     * @return An Object[]  containing the fields in the correct order used 
     * by the VoltDB procedures ReportSessionUsage
     */
   public Object[] getParamsForVoltDBCall() {
        Object[] newParams = new Object[5];

        newParams[0] = cellId;
        newParams[1] = sessionId;
        newParams[2] = sessionStartUTC;
        newParams[3] = policyName;
        newParams[4] = recordUsage;

        return newParams;

    }

}
